$(document).ready(function() {
  var today = new Date();
  today.setHours(0, 0, 0, 0);

  var calendars = {
    calendar1: {
      element: $('#calendar1'),
      input: $('#checkIn'),
      month: today.getMonth(),
      year: today.getFullYear(),
      startDate: null,
      endDate: null
    },
    calendar2: {
      element: $('#calendar2'),
      input: $('#checkOut'),
      month: today.getMonth() + 1,
      year: today.getFullYear(),
      startDate: null,
      endDate: null
    },
    calendar3: {
      element: $('#calendar3'),
      input: $('#checkInDate'),
      month: today.getMonth(),
      year: today.getFullYear(),
      startDate: null,
      endDate: null
    },
    calendar4: {
      element: $('#calendar4'),
      input: $('#checkOutDate'),
      month: today.getMonth() + 1,
      year: today.getFullYear(),
      startDate: null,
      endDate: null
    }
  };

  function generateCalendar(month, year, calendar) {
    var daysInMonth = new Date(year, month + 1, 0).getDate();
    var firstDay = new Date(year, month, 1).getDay();

    var monthYearText = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;
    calendar.element.find('.monthYear').text(monthYearText);

    var calendarHtml = '<table>';
    calendarHtml += '<tr><th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th></tr><tr>';

    for (var i = 0; i < firstDay; i++) {
      calendarHtml += '<td></td>';
    }

    for (var day = 1; day <= daysInMonth; day++) {
      if ((i % 7 === 0) && (day > 1)) {
        calendarHtml += '</tr><tr>';
      }
      var currentDate = new Date(year, month, day);
      var dateClass = '';
      if (currentDate < today) {
          dateClass = 'disabled';
      } else if (calendar.startDate && currentDate.getTime() === calendar.startDate.getTime()) {
          dateClass = 'start-date';
      } else if (calendar.endDate && currentDate.getTime() === calendar.endDate.getTime()) {
          dateClass = 'end-date';
      } else if (calendar.startDate && calendar.endDate && currentDate > calendar.startDate && currentDate < calendar.endDate) {
          dateClass = 'in-range';
      }
      calendarHtml += `<td class="${dateClass}"><span>${day}</span></td>`;
      i++;
    }

    while (i % 7 !== 0) {
      calendarHtml += '<td></td>';
      i++;
    }

    calendarHtml += '</tr></table>';
    calendar.element.find('.calendarBody').html(calendarHtml);
  }

  function showCalendars() {
    $('.custom-calendar').show();
    generateCalendar(calendars.calendar1.month, calendars.calendar1.year, calendars.calendar1);
    generateCalendar(calendars.calendar2.month, calendars.calendar2.year, calendars.calendar2);
    generateCalendar(calendars.calendar3.month, calendars.calendar3.year, calendars.calendar3);
    generateCalendar(calendars.calendar4.month, calendars.calendar4.year, calendars.calendar4);
  }

  $('.dateInput').on('focus', function() {
    // positionCalendars();
    showCalendars();
      updateNavigationButtons();

  });

  // $(document).on('click', function(event) {
  //   if (!$(event.target).closest('.custom-calendar, .dateInput').length) {
  //     $('.custom-calendar').hide();
  //   }
  // });

  function syncCalendars() {
    // Synchronize start and end dates between related calendars
    if (calendars.calendar1.startDate) {
      calendars.calendar2.startDate = calendars.calendar1.startDate;
    }
    if (calendars.calendar1.endDate) {
      calendars.calendar2.endDate = calendars.calendar1.endDate;
    }
    if (calendars.calendar3.startDate) {
      calendars.calendar4.startDate = calendars.calendar3.startDate;
    }
    if (calendars.calendar3.endDate) {
      calendars.calendar4.endDate = calendars.calendar3.endDate;
    }

    // Ensure calendar2 and calendar4 always display the next month
    calendars.calendar2.month = (calendars.calendar1.month + 1) % 12;
    if (calendars.calendar2.month === 0) {
      calendars.calendar2.year = calendars.calendar1.year + 1;
    } else {
      calendars.calendar2.year = calendars.calendar1.year;
    }

    calendars.calendar4.month = (calendars.calendar3.month + 1) % 12;
    if (calendars.calendar4.month === 0) {
      calendars.calendar4.year = calendars.calendar3.year + 1;
    } else {
      calendars.calendar4.year = calendars.calendar3.year;
    }

    generateCalendar(calendars.calendar1.month, calendars.calendar1.year, calendars.calendar1);
    generateCalendar(calendars.calendar2.month, calendars.calendar2.year, calendars.calendar2);
    generateCalendar(calendars.calendar3.month, calendars.calendar3.year, calendars.calendar3);
    generateCalendar(calendars.calendar4.month, calendars.calendar4.year, calendars.calendar4);
  }


  $('.calendarBody').on('click', 'td', function() {
    if ($(this).hasClass('disabled')) return;
    var calendarId = $(this).closest('.custom-calendar').attr('id');
    var day = parseInt($(this).text(), 10);
    if (!day) return;

    var selectedDate = new Date(calendars[calendarId].year, calendars[calendarId].month, day);

    if (calendarId === 'calendar1') {
      if (!calendars.calendar1.startDate || (calendars.calendar1.startDate && calendars.calendar1.endDate)) {
        // Set start date
        calendars.calendar1.startDate = selectedDate;
        calendars.calendar1.endDate = null;
        calendars.calendar2.startDate = selectedDate;
      } else if (selectedDate < calendars.calendar1.startDate) {
        // Reset start date if selected date is before start date
        calendars.calendar1.startDate = selectedDate;
        calendars.calendar1.endDate = null;
        calendars.calendar2.startDate = selectedDate;
      } else {
        // Set end date
        calendars.calendar1.endDate = selectedDate;
        calendars.calendar2.endDate = selectedDate;
      }
    } else if (calendarId === 'calendar2') {
      if (!calendars.calendar1.startDate) {
        // If no start date is set, assume this is the start date
        calendars.calendar1.startDate = selectedDate;
        calendars.calendar2.startDate = selectedDate;
        calendars.calendar1.endDate = null;
        calendars.calendar2.endDate = null;
      } else {
        // Set end date
        calendars.calendar1.endDate = selectedDate;
        calendars.calendar2.endDate = selectedDate;
      }
    }

    if (calendarId === 'calendar3') {
      if (!calendars.calendar3.startDate || (calendars.calendar3.startDate && calendars.calendar3.endDate)) {
        // Set start date
        calendars.calendar3.startDate = selectedDate;
        calendars.calendar3.endDate = null;
        calendars.calendar4.startDate = selectedDate;
      } else if (selectedDate < calendars.calendar3.startDate) {
        // Reset start date if selected date is before start date
        calendars.calendar3.startDate = selectedDate;
        calendars.calendar3.endDate = null;
        calendars.calendar4.startDate = selectedDate;
      } else {
        // Set end date
        calendars.calendar3.endDate = selectedDate;
        calendars.calendar4.endDate = selectedDate;
      }
    } else if (calendarId === 'calendar4') {
      if (!calendars.calendar3.startDate) {
        // If no start date is set, assume this is the start date
        calendars.calendar3.startDate = selectedDate;
        calendars.calendar4.startDate = selectedDate;
        calendars.calendar3.endDate = null;
        calendars.calendar4.endDate = null;
      } else {
        // Set end date
        calendars.calendar3.endDate = selectedDate;
        calendars.calendar4.endDate = selectedDate;
      }
    }

    syncCalendars();

    // Update input fields
    updateInputFields();
  });
  function updateInputFields() {
    // Section 1 input fields
    if (calendars.calendar1.startDate) {
      calendars.calendar1.input.val(`${calendars.calendar1.startDate.getDate()} ${calendars.calendar1.startDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar1.startDate.getFullYear()}`);
    }
    if (calendars.calendar1.endDate) {
      calendars.calendar2.input.val(`${calendars.calendar1.endDate.getDate()} ${calendars.calendar1.endDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar1.startDate.getFullYear()}`);
    }
    if (calendars.calendar2.startDate) {
      calendars.calendar1.input.val(`${calendars.calendar2.startDate.getDate()} ${calendars.calendar2.startDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar2.startDate.getFullYear()}`);
    }
    if (calendars.calendar2.endDate) {
      calendars.calendar2.input.val(`${calendars.calendar2.endDate.getDate()} ${calendars.calendar2.endDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar2.startDate.getFullYear()}`);
    }

    // Section 2 input fields
    if (calendars.calendar3.startDate) {
      calendars.calendar3.input.val(`${calendars.calendar3.startDate.getDate()} ${calendars.calendar3.startDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar3.startDate.getFullYear()}`);
    }
    if (calendars.calendar3.endDate) {
      calendars.calendar4.input.val(`${calendars.calendar3.endDate.getDate()} ${calendars.calendar3.endDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar3.startDate.getFullYear()}`);
    }
    if (calendars.calendar4.startDate) {
      calendars.calendar3.input.val(`${calendars.calendar4.startDate.getDate()} ${calendars.calendar4.startDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar4.startDate.getFullYear()}`);
    }
    if (calendars.calendar4.endDate) {
      calendars.calendar4.input.val(`${calendars.calendar4.endDate.getDate()} ${calendars.calendar4.endDate.toLocaleString('default', { month: 'short' })} ${calendars.calendar4.startDate.getFullYear()}`);
    }
  }

  $('.prevMonth').prop('disabled', true);
    $('.prevMonth').on('click', function(e) {
      e.preventDefault();
      if ($(this).prop('disabled')) return;
      var canNavigatePrev = false;
      for (var key in calendars) {
        if (calendars[key].year > today.getFullYear() || 
         (calendars[key].year === today.getFullYear() && calendars[key].month > today.getMonth())) {
          calendars[key].month--;
          if (calendars[key].month < 0) {
            calendars[key].month = 11;
            calendars[key].year--;
          }
          canNavigatePrev = true;
        }
      }
      if (canNavigatePrev) {
        syncCalendars();
        updateNavigationButtons();
      }
    });

    $('.nextMonth').on('click', function(e) {
      e.preventDefault();
      for (var key in calendars) {
        calendars[key].month++;
        if (calendars[key].month > 11) {
          calendars[key].month = 0;
          calendars[key].year++;
        }
      }
      syncCalendars();
    });

    function updateNavigationButtons() {
      var onFirstMonth = true;
      for (var key in calendars) {
        if (calendars[key].year > today.getFullYear() || 
          (calendars[key].year === today.getFullYear() && calendars[key].month > today.getMonth())) {
            onFirstMonth = false;
        }
      }
      $('.prevMonth').prop('disabled', onFirstMonth);
    }

    // Initially hide calendars and disable prevMonth button
    updateNavigationButtons();
});